(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> long() argument must be a string or a number, not 'Table'"
p3
sS'layer'
p4
S'/home/ebratt/PycharmProjects/psim2web2py/web2py/applications/psim2web2py/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\nfrom plugin_tablescope import TableScope\nfrom plugin_solidtable import SOLIDTABLE, OrderbySelector\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    logged_in = auth.user or False\n\n    # build the SOLIDTABLE\n    request_headers = request.vars.headers or \'default\'\n    request_columns = request.vars.columns or \'default\'\n    orderby_selector = OrderbySelector([~db.Simulation.id])\n    dataset = db(db.Simulation.Owner==auth.user)\n    scope = TableScope(dataset, db.Simulation.Algorithm, renderstyle=True)\n    rows = scope.scoped_dataset.select(\n        join=[db.Log.on(db.Simulation==db.Log.Simulation),\n              db.Plot.on(db.Simulation==db.Plot.Simulation)],\n        orderby=orderby_selector.orderby())\n    if request_headers == \'default\':\n        # The "headers" is a dictionary of dictionaries for updating default values.\n        # Custom fields such as "tax" can be passed to the dictionary keys.\n        headers = {\'Simulation.Date\': {\'selected\': True},\n                   \'Simulation.Algorithm\': {\'selected\': False},\n                   \'Simulation.Input_Data\': {\'selected\': False},\n                   \'Simulation.Result\': {\'selected\': False},\n                   \'Log.Content\': {\'selected\': False},\n                   \'Plot.Plot\': {\'selected\': False}\n                   }\n    else:\n        # The "headers" can be \'labels\' or \'fieldname:capitalize\'\n        headers = request_headers\n    columns = [db.Simulation.Date,\n               db.Simulation.Algorithm,\n               db.Simulation.Input_Data,\n               db.Simulation.Result,\n               db.Log.Content,\n               db.Plot.Plot]\n    table = SOLIDTABLE(rows,\n                       columns=columns,\n                       headers=headers,\n                       orderby=orderby_selector,\n                       renderstyle=True)\n    return dict(logged_in=logged_in, sample_1=dict(table=table, scope=scope))\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/restricted.py", line 224, in restricted\n    exec ccode in environment\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/applications/psim2web2py/controllers/default.py", line 91, in <module>\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/globals.py", line 393, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/applications/psim2web2py/controllers/default.py", line 25, in index\n    orderby=orderby_selector.orderby())\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/dal/objects.py", line 2066, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/dal/adapters/sqlite.py", line 125, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/dal/adapters/base.py", line 1219, in select\n    sql = self._select(query, fields, attributes)\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/dal/adapters/base.py", line 1130, in _select\n    sql_t += \' %s %s\' % (icommand, t)\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/dal/objects.py", line 1143, in __str__\n    return self.db._adapter.expand(self, self.type)\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/dal/adapters/base.py", line 897, in expand\n    out = op(first, second, **optional_args)\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/dal/adapters/base.py", line 868, in ON\n    return (\'%s ON %s\') % (self.expand(table_rname), self.expand(second))\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/dal/adapters/base.py", line 897, in expand\n    out = op(first, second, **optional_args)\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/dal/adapters/base.py", line 794, in EQ\n    self.expand(second, first.type))\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/dal/adapters/base.py", line 908, in expand\n    return str(self.represent(expression,field_type))\n  File "/home/ebratt/PycharmProjects/psim2web2py/web2py/gluon/dal/adapters/base.py", line 1364, in represent\n    return str(long(obj))\nTypeError: long() argument must be a string or a number, not \'Table\'\n'
p11
s.